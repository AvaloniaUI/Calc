<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:material="using:Material.Icons.Avalonia"
             xmlns:system="clr-namespace:System;assembly=System.Runtime"
             xmlns:viewModels="clr-namespace:Calc.ViewModels"
             MaxWidth="800" MaxHeight="500" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
             xmlns:m="using:Calc.Models"
             xmlns:assists="clr-namespace:Material.Styles.Assists;assembly=Material.Styles"
             xmlns:naming="clr-namespace:Material.Styles.Resources.Naming;assembly=Material.Styles"
             mc:Ignorable="d" 
             x:Class="Calc.Views.MainView"
             x:DataType="viewModels:MainWindowViewModel"
             x:CompileBindings="True">
    <UserControl.Styles>
            <Style Selector="Button" >
        <Setter Property="CornerRadius" Value="4" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Padding" Value="16 8" />
        <Setter Property="assists:ShadowAssist.ShadowDepth" Value="Depth1" />
        <Setter Property="assists:ButtonAssist.HoverColor"
                Value="{Binding Foreground,
                      Converter={StaticResource BrushRoundConverter}, RelativeSource={RelativeSource Self}}" />
        <Setter Property="assists:ButtonAssist.ClickFeedbackColor" Value="#000000" />
        <Setter Property="TextBlock.FontWeight" Value="Medium" />
        <Setter Property="TextBlock.FontSize" Value="14" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="ClipToBounds" Value="False" />
        <Setter Property="Template" >
            <ControlTemplate>
                <Border Name="{x:Static naming:PartNames.PartRootBorder}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding CornerRadius}"
                        assists:ShadowAssist.ShadowDepth="{TemplateBinding assists:ShadowAssist.ShadowDepth}" >
                    <Panel Name="{x:Static naming:PartNames.PartRootPanel}">
                        <Border Name="{x:Static naming:PartNames.PartHoverEffect}"
                                Background="{TemplateBinding assists:ButtonAssist.HoverColor}"
                                CornerRadius="{TemplateBinding CornerRadius}" />
                        <Border CornerRadius="{TemplateBinding CornerRadius}"
                                ClipToBounds="True" >
                            <ContentPresenter Name="{x:Static naming:PartNames.PartContentPresenter}"
                                              Content="{TemplateBinding Content}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              Padding="{TemplateBinding Padding}"
                                              HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                    </Panel>
                </Border>
            </ControlTemplate>
        </Setter>
    </Style>
    
    <!-- Feedbacks -->

    <Style Selector="Button:not(:disabled):pointerover /template/ Border#PART_HoverEffect" >
        <Setter Property="Opacity" Value="{StaticResource ButtonHoveredOpacity}" />
    </Style>

    <Style Selector="Button:not(.flat):pointerover:not(.no-material) /template/ Border#PART_RootBorder" >
        <Setter Property="assists:ShadowAssist.Darken" Value="True" />
    </Style>
    
    
    <Style Selector="Button.light:not(.outline)" >
        <Setter Property="Background" Value="{DynamicResource PrimaryHueLightBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueLightBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueLightForegroundBrush}" />
    </Style>
    
    <Style Selector="Button.dark:not(.outline)" >
        <Setter Property="Background" Value="{DynamicResource PrimaryHueDarkBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueDarkBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueDarkForegroundBrush}" />
    </Style>
    
    <Style Selector="Button.accent:not(.outline)" >
        <Setter Property="Background" Value="{DynamicResource SecondaryHueMidBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource SecondaryHueMidBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource SecondaryHueMidForegroundBrush}" />
    </Style>
    
    <Style Selector="Button.flat" >
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}" />
        <Setter Property="Padding" Value="16 6" />
        <Setter Property="assists:ShadowAssist.ShadowDepth" Value="Depth0" />
        <Setter Property="assists:ButtonAssist.HoverColor" Value="{DynamicResource MaterialDesignBody}" />
        <Setter Property="assists:ButtonAssist.ClickFeedbackColor" Value="{Binding $self.Foreground}" />
    </Style>

    <!-- Default state -->

    <Style Selector="Button.accent.flat:not(.outline)" >
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource SecondaryHueMidBrush}" />
    </Style>
    
    <Style Selector="Button.flat:not(.outline):disabled">
        <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignBody}" />
        <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
    </Style>
    
    
    <Style Selector="Button.icon" >
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}" />
        <Setter Property="Padding" Value="12" />
        <Setter Property="Height" Value="32" />
        <Setter Property="Width" Value="32" />
        <Setter Property="assists:ShadowAssist.ShadowDepth" Value="Depth0" />
        <Setter Property="CornerRadius" Value="100000"/>
    </Style>

    <!-- Outlined buttons -->

    <Style Selector="Button.outline" >
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}" />
        <Setter Property="Padding" Value="16 6" />
        <Setter Property="assists:ShadowAssist.ShadowDepth" Value="Depth0" />
    </Style>

    <Style Selector="Button.outline.accent" >
        <Setter Property="BorderBrush" Value="{DynamicResource SecondaryHueMidBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource SecondaryHueMidBrush}" />
    </Style>

    <Style Selector="Button.outline.light" >
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueLightBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueLightBrush}" />
    </Style>
    
    <Style Selector="Button.outline.dark" >
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueDarkBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueDarkBrush}" />
    </Style>
    
    <Style Selector="Button.outline:disabled">
        <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignBody}" />
        <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
    </Style>
    
    <!-- Compatibility -->

    <!-- Transitions -->
    
    <Style Selector="Button:not(.no-transitions) /template/ Border#PART_RootBorder" >
        <Setter Property="Transitions" >
            <Transitions>
                <BrushTransition Duration="0.25" Property="Background" Easing="CircularEaseOut"/>
                <BrushTransition Duration="0.25" Property="BorderBrush" Easing="CircularEaseOut"/>
            </Transitions>
        </Setter>
    </Style>

    <Style Selector="Button:not(.no-transitions) /template/ Border#PART_HoverEffect" >
        <Setter Property="Transitions" >
            <Transitions>
                <DoubleTransition Duration="0:0:0.25" Property="Opacity" Easing="LinearEasing" />
            </Transitions>
        </Setter>
    </Style>

    <!-- Default state -->

    <Style Selector="Button /template/ Border#PART_HoverEffect" >
        <Setter Property="Opacity" Value="0" />
        <Setter Property="BorderThickness" Value="0" />
    </Style>

    <Style Selector="Button:disabled:not(.no-material)" >
        <Setter Property="Opacity" Value="{StaticResource ButtonDisabledOpacity}" />
    </Style>

    <!-- Feedbacks -->

    <Style Selector="Button:not(:disabled):pointerover /template/ Border#PART_HoverEffect" >
        <Setter Property="Opacity" Value="{StaticResource ButtonHoveredOpacity}" />
    </Style>

    <Style Selector="Button:not(.Flat):pointerover:not(.no-material) /template/ Border#PART_RootBorder" >
        <Setter Property="assists:ShadowAssist.Darken" Value="True" />
    </Style>
    
    
    <Style Selector="Button.Light:not(.Outline)" >
        <Setter Property="Background" Value="{DynamicResource PrimaryHueLightBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueLightBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueLightForegroundBrush}" />
    </Style>
    
    <Style Selector="Button.Dark:not(.Outline)" >
        <Setter Property="Background" Value="{DynamicResource PrimaryHueDarkBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueDarkBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueDarkForegroundBrush}" />
    </Style>
    
    <Style Selector="Button.Accent:not(.Outline)" >
        <Setter Property="Background" Value="{DynamicResource SecondaryHueMidBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource SecondaryHueMidBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource SecondaryHueMidForegroundBrush}" />
    </Style>

    
    <Style Selector="Button:disabled">
        <Setter Property="Background" Value="{DynamicResource MaterialDesignBody}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignBody}" />
        <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
    </Style>
    
    <Style Selector="Button.Flat" >
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}" />
        <Setter Property="Padding" Value="16 6" />
        <Setter Property="assists:ShadowAssist.ShadowDepth" Value="Depth0" />
        <Setter Property="assists:ButtonAssist.HoverColor" Value="{DynamicResource MaterialDesignBody}" />
        <Setter Property="assists:ButtonAssist.ClickFeedbackColor" Value="{Binding $self.Foreground}" />
    </Style>

    <!-- Default state -->

    <Style Selector="Button.Accent.Flat:not(.Outline)" >
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource SecondaryHueMidBrush}" />
    </Style>
    
    <Style Selector="Button.Flat:not(.Outline):disabled">
        <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignBody}" />
        <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
    </Style>
    
    
    <Style Selector="Button.Icon" >
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}" />
        <Setter Property="Padding" Value="12" />
        <Setter Property="Height" Value="32" />
        <Setter Property="Width" Value="32" />
        <Setter Property="assists:ShadowAssist.ShadowDepth" Value="Depth0" />
        <Setter Property="CornerRadius" Value="100000"/>
    </Style>

    <!-- Outlined buttons -->

    <Style Selector="Button.Outline" >
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}" />
        <Setter Property="Padding" Value="16 6" />
        <Setter Property="assists:ShadowAssist.ShadowDepth" Value="Depth0" />
    </Style>

    <Style Selector="Button.Outline.Accent" >
        <Setter Property="BorderBrush" Value="{DynamicResource SecondaryHueMidBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource SecondaryHueMidBrush}" />
    </Style>

    <Style Selector="Button.Outline.Light" >
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueLightBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueLightBrush}" />
    </Style>
    
    <Style Selector="Button.Outline.Dark" >
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueDarkBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueDarkBrush}" />
    </Style>
    
    <Style Selector="Button.Outline:disabled">
        <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignBody}" />
        <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
    </Style>
        <Style Selector="Button">
            <Setter Property="Margin" Value="5" />
        </Style>
        <Style Selector="Button TextBlock">
            <Setter Property="FontSize" Value="20" />
        </Style>
        <Style Selector="TextBlock.screen">
            <Setter Property="Background" Value="#2f2a2c" />
            <Setter Property="Margin" Value="5" />
            <Setter Property="FontSize" Value="30" />
            <Setter Property="MinHeight" Value="35" />
            <Setter Property="TextAlignment" Value="Right" />
            <Setter Property="Foreground" Value="#ddffffff" />
        </Style>
    </UserControl.Styles>
    <UserControl.KeyBindings>
        <!--  0  -->
        <KeyBinding Command="{Binding AddNumberCommand}" Gesture="D0">
            <KeyBinding.CommandParameter>
                <system:Int32>0</system:Int32>
            </KeyBinding.CommandParameter>
        </KeyBinding>
        <KeyBinding Command="{Binding AddNumberCommand}" Gesture="NumPad0">
            <KeyBinding.CommandParameter>
                <system:Int32>0</system:Int32>
            </KeyBinding.CommandParameter>
        </KeyBinding>
        <!--  1  -->
        <KeyBinding Command="{Binding AddNumberCommand}" Gesture="D1">
            <KeyBinding.CommandParameter>
                <system:Int32>1</system:Int32>
            </KeyBinding.CommandParameter>
        </KeyBinding>
        <KeyBinding Command="{Binding AddNumberCommand}" Gesture="NumPad1">
            <KeyBinding.CommandParameter>
                <system:Int32>1</system:Int32>
            </KeyBinding.CommandParameter>
        </KeyBinding>
        <!--  2  -->
        <KeyBinding Command="{Binding AddNumberCommand}" Gesture="D2">
            <KeyBinding.CommandParameter>
                <system:Int32>2</system:Int32>
            </KeyBinding.CommandParameter>
        </KeyBinding>
        <KeyBinding Command="{Binding AddNumberCommand}" Gesture="NumPad2">
            <KeyBinding.CommandParameter>
                <system:Int32>2</system:Int32>
            </KeyBinding.CommandParameter>
        </KeyBinding>
        <!--  3  -->
        <KeyBinding Command="{Binding AddNumberCommand}" Gesture="D3">
            <KeyBinding.CommandParameter>
                <system:Int32>3</system:Int32>
            </KeyBinding.CommandParameter>
        </KeyBinding>
        <KeyBinding Command="{Binding AddNumberCommand}" Gesture="NumPad3">
            <KeyBinding.CommandParameter>
                <system:Int32>3</system:Int32>
            </KeyBinding.CommandParameter>
        </KeyBinding>
        <!--  4  -->
        <KeyBinding Command="{Binding AddNumberCommand}" Gesture="D4">
            <KeyBinding.CommandParameter>
                <system:Int32>4</system:Int32>
            </KeyBinding.CommandParameter>
        </KeyBinding>
        <KeyBinding Command="{Binding AddNumberCommand}" Gesture="NumPad4">
            <KeyBinding.CommandParameter>
                <system:Int32>4</system:Int32>
            </KeyBinding.CommandParameter>
        </KeyBinding>
        <!--  5  -->
        <KeyBinding Command="{Binding AddNumberCommand}" Gesture="D5">
            <KeyBinding.CommandParameter>
                <system:Int32>5</system:Int32>
            </KeyBinding.CommandParameter>
        </KeyBinding>
        <KeyBinding Command="{Binding AddNumberCommand}" Gesture="NumPad5">
            <KeyBinding.CommandParameter>
                <system:Int32>5</system:Int32>
            </KeyBinding.CommandParameter>
        </KeyBinding>
        <!--  6  -->
        <KeyBinding Command="{Binding AddNumberCommand}" Gesture="D6">
            <KeyBinding.CommandParameter>
                <system:Int32>6</system:Int32>
            </KeyBinding.CommandParameter>
        </KeyBinding>
        <KeyBinding Command="{Binding AddNumberCommand}" Gesture="NumPad6">
            <KeyBinding.CommandParameter>
                <system:Int32>6</system:Int32>
            </KeyBinding.CommandParameter>
        </KeyBinding>
        <!--  7  -->
        <KeyBinding Command="{Binding AddNumberCommand}" Gesture="D7">
            <KeyBinding.CommandParameter>
                <system:Int32>7</system:Int32>
            </KeyBinding.CommandParameter>
        </KeyBinding>
        <KeyBinding Command="{Binding AddNumberCommand}" Gesture="NumPad7">
            <KeyBinding.CommandParameter>
                <system:Int32>7</system:Int32>
            </KeyBinding.CommandParameter>
        </KeyBinding>
        <!--  8  -->
        <KeyBinding Command="{Binding AddNumberCommand}" Gesture="D8">
            <KeyBinding.CommandParameter>
                <system:Int32>8</system:Int32>
            </KeyBinding.CommandParameter>
        </KeyBinding>
        <KeyBinding Command="{Binding AddNumberCommand}" Gesture="NumPad8">
            <KeyBinding.CommandParameter>
                <system:Int32>8</system:Int32>
            </KeyBinding.CommandParameter>
        </KeyBinding>
        <!--  9  -->
        <KeyBinding Command="{Binding AddNumberCommand}" Gesture="D9">
            <KeyBinding.CommandParameter>
                <system:Int32>9</system:Int32>
            </KeyBinding.CommandParameter>
        </KeyBinding>
        <KeyBinding Command="{Binding AddNumberCommand}" Gesture="NumPad9">
            <KeyBinding.CommandParameter>
                <system:Int32>9</system:Int32>
            </KeyBinding.CommandParameter>
        </KeyBinding>
        <!--  +  -->
        <KeyBinding Command="{Binding AddOperatorCommand}" Gesture="Add">
            <KeyBinding.CommandParameter>
                <m:Operator>Add</m:Operator>
            </KeyBinding.CommandParameter>
        </KeyBinding>
        <KeyBinding Command="{Binding AddOperatorCommand}" Gesture="OemPlus">
            <KeyBinding.CommandParameter>
                <m:Operator>Add</m:Operator>
            </KeyBinding.CommandParameter>
        </KeyBinding>
        <!--  -  -->
        <KeyBinding Command="{Binding AddOperatorCommand}" Gesture="Subtract">
            <KeyBinding.CommandParameter>
                <m:Operator>Subtract</m:Operator>
            </KeyBinding.CommandParameter>
        </KeyBinding>
        <KeyBinding Command="{Binding AddOperatorCommand}" Gesture="OemMinus">
            <KeyBinding.CommandParameter>
                <m:Operator>Subtract</m:Operator>
            </KeyBinding.CommandParameter>
        </KeyBinding>
        <!--  .  -->
        <KeyBinding Command="{Binding AddDecimalSeparatorCommand}" Gesture="OemPeriod" />
        <!--  +-  -->
        <KeyBinding Command="{Binding AlternateNegativePositiveCommand}" Gesture="Alt+Subtract" />
        <KeyBinding Command="{Binding AlternateNegativePositiveCommand}" Gesture="Alt+OemMinus" />
        <!--  Backspace  -->
        <KeyBinding Command="{Binding DeleteLastCommand}" Gesture="Back" />
        <!--  Delete  -->
        <KeyBinding Command="{Binding ClearScreenCommand}" Gesture="Escape" />
        <KeyBinding Command="{Binding ClearScreenCommand}" Gesture="Delete" />
        <!--  *  -->
        <KeyBinding Command="{Binding AddOperatorCommand}" Gesture="Multiply">
            <KeyBinding.CommandParameter>
                <m:Operator>Multiply</m:Operator>
            </KeyBinding.CommandParameter>
        </KeyBinding>
        <!--  /  -->
        <KeyBinding Command="{Binding AddOperatorCommand}" Gesture="Divide">
            <KeyBinding.CommandParameter>
                <m:Operator>Divide</m:Operator>
            </KeyBinding.CommandParameter>
        </KeyBinding>
        <KeyBinding Command="{Binding AddOperatorCommand}" Gesture="Oem2">
            <KeyBinding.CommandParameter>
                <m:Operator>Divide</m:Operator>
            </KeyBinding.CommandParameter>
        </KeyBinding>
        <!--  ()  -->
        <KeyBinding Command="{Binding AddParenthesisCommand}" Gesture="OemOpenBrackets" />
        <KeyBinding Command="{Binding AddParenthesisCommand}" Gesture="OemCloseBrackets" />
        <!--  =  -->
        <KeyBinding Command="{Binding PickResultCommand}" Gesture="Enter" />
    </UserControl.KeyBindings>
    <Grid Margin="5" RowDefinitions="Auto, Auto, *">
        <!--  Screens  -->
        <TextBlock
            Classes="screen"
            Grid.Row="0"
            Text="{Binding ShownString}" />
        <TextBlock
            Classes="screen"
            Grid.Row="1"
            Text="{Binding ShownResult}" />
        <!--  Keys  -->
        <Grid
            ColumnDefinitions="*,*,*,*,*"
            Grid.Row="2"
            RowDefinitions="*,*,*,*">
            <!--  Numeric keys  -->
            <Button
                Command="{Binding AddNumberCommand}"
                Grid.Column="0"
                Grid.Row="3">
                <Button.CommandParameter>
                    <system:Int32>0</system:Int32>
                </Button.CommandParameter>
                0
            </Button>
            <Button
                Command="{Binding AddNumberCommand}"
                Grid.Column="0"
                Grid.Row="2">
                <Button.CommandParameter>
                    <system:Int32>1</system:Int32>
                </Button.CommandParameter>
                1
            </Button>
            <Button
                Command="{Binding AddNumberCommand}"
                Grid.Column="1"
                Grid.Row="2">
                <Button.CommandParameter>
                    <system:Int32>2</system:Int32>
                </Button.CommandParameter>
                2
            </Button>
            <Button
                Command="{Binding AddNumberCommand}"
                Grid.Column="2"
                Grid.Row="2">
                <Button.CommandParameter>
                    <system:Int32>3</system:Int32>
                </Button.CommandParameter>
                3
            </Button>
            <Button
                Command="{Binding AddNumberCommand}"
                Grid.Column="0"
                Grid.Row="1">
                <Button.CommandParameter>
                    <system:Int32>4</system:Int32>
                </Button.CommandParameter>
                4
            </Button>
            <Button
                Command="{Binding AddNumberCommand}"
                Grid.Column="1"
                Grid.Row="1">
                <Button.CommandParameter>
                    <system:Int32>5</system:Int32>
                </Button.CommandParameter>
                5
            </Button>
            <Button
                Command="{Binding AddNumberCommand}"
                Grid.Column="2"
                Grid.Row="1">
                <Button.CommandParameter>
                    <system:Int32>6</system:Int32>
                </Button.CommandParameter>
                6
            </Button>
            <Button
                Command="{Binding AddNumberCommand}"
                Grid.Column="0"
                Grid.Row="0">
                <Button.CommandParameter>
                    <system:Int32>7</system:Int32>
                </Button.CommandParameter>
                7
            </Button>
            <Button
                Command="{Binding AddNumberCommand}"
                Grid.Column="1"
                Grid.Row="0">
                <Button.CommandParameter>
                    <system:Int32>8</system:Int32>
                </Button.CommandParameter>
                8
            </Button>
            <Button
                Command="{Binding AddNumberCommand}"
                Grid.Column="2"
                Grid.Row="0">
                <Button.CommandParameter>
                    <system:Int32>9</system:Int32>
                </Button.CommandParameter>
                9
            </Button>
            <!--  Non-numeric keys  -->
            <Button
                Command="{Binding AddDecimalSeparatorCommand}"
                Grid.Column="1"
                Grid.Row="3">
                .
            </Button>
            <Button
                Command="{Binding AlternateNegativePositiveCommand}"
                Grid.Column="2"
                Grid.Row="3">
                +/-
            </Button>
            <Button
                Command="{Binding DeleteLastCommand}"
                Grid.Column="3"
                Grid.Row="0">
                <material:MaterialIcon Kind="Backspace" />
            </Button>
            <Button
                Command="{Binding ClearScreenCommand}"
                Grid.Column="4"
                Grid.Row="0">
                <material:MaterialIcon Kind="DeleteForever" />
            </Button>
            <Button
                Command="{Binding AddOperatorCommand}"
                Grid.Column="3"
                Grid.Row="1">
                <Button.CommandParameter>
                    <m:Operator>Multiply</m:Operator>
                </Button.CommandParameter>
                <material:MaterialIcon Kind="Multiply" />
            </Button>
            <Button
                Command="{Binding AddOperatorCommand}"
                Grid.Column="4"
                Grid.Row="1">
                <Button.CommandParameter>
                    <m:Operator>Divide</m:Operator>
                </Button.CommandParameter>
                <material:MaterialIcon Kind="Division" />
            </Button>
            <Button
                Command="{Binding AddOperatorCommand}"
                Grid.Column="3"
                Grid.Row="2">
                <Button.CommandParameter>
                    <m:Operator>Add</m:Operator>
                </Button.CommandParameter>
                <material:MaterialIcon Kind="Add" />
            </Button>
            <Button
                Command="{Binding AddOperatorCommand}"
                Grid.Column="4"
                Grid.Row="2">
                <Button.CommandParameter>
                    <m:Operator>Subtract</m:Operator>
                </Button.CommandParameter>
                <material:MaterialIcon Kind="Minus" />
            </Button>
            <Button
                Command="{Binding AddParenthesisCommand}"
                Grid.Column="3"
                Grid.Row="3">
                <material:MaterialIcon Kind="CodeParentheses" />
            </Button>
            <Button
                Command="{Binding PickResultCommand}"
                Grid.Column="4"
                Grid.Row="3">
                <material:MaterialIcon Kind="Equal" />
            </Button>
        </Grid>
    </Grid>
</UserControl>
